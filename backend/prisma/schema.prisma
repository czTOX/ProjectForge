// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                Int         @id @default(autoincrement())
  hashedPassword    String
  email             String      @unique
  firstName         String      @default("")
  lastName          String      @default("")

  teams             Team[]      @relation("UsersTeams")
  workHistory       TaskWork[]
  messages          Message[]
}

model Team {
  id                Int         @id @default(autoincrement())
  name              String
  profilePic        String      @default("")

  users             User[]      @relation("UsersTeams")
  projects          Project[]
}

model Project {
  id                Int         @id @default(autoincrement())
  name              String
  description       String

  team              Team        @relation(fields: [teamId], references: [id])
  teamId            Int
  tasks             Task[]
  messages          Message[]
}

model Task {
  id                Int         @id @default(autoincrement())
  name              String
  createdAt         DateTime?   @default(now())
  editedAt          DateTime?   @default(now())
  status            Int         @default(0)
  creatorId         Int

  project           Project     @relation(fields: [projectId], references: [id])
  projectId         Int
  workHistory       TaskWork[]
}

model TaskWork {
  id                Int         @id @default(autoincrement())
  startedAt         DateTime    @default(now())
  endedAt           DateTime 

  user              User        @relation(fields: [userId], references: [id])
  userId            Int
  task              Task        @relation(fields: [taskId], references: [id])
  taskId            Int
}

model Message {
  id                Int         @id @default(autoincrement())
  content           String
  postedAt          DateTime    @default(now())

  author            User        @relation(fields: [authorId], references: [id])
  authorId          Int
  project           Project     @relation(fields: [projectId], references: [id])
  projectId         Int
}
